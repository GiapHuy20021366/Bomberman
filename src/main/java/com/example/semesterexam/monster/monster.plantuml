@startuml

title __MONSTER's Class Diagram__\n

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.BossHuMan {
            - countdownNextSummon : Timeline
            - hasSummon : boolean
            - summon : Timeline
            + BossHuMan()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
            + die()
            + doAfterCompleteAttack()
            + freeze()
            - summon()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Orc {
            + Orc()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Satan {
            + Satan()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
            + addSounds()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Skeleton {
            + Skeleton()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Winged {
            + Winged()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Wolf {
            + Wolf()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
            + causeDamage()
            + countdownPutBoom()
            + defaultAttack()
            - putBoom()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.semesterexam {
      namespace monster {
        class com.example.semesterexam.monster.Zombie {
            + Zombie()
            + addActionAttack()
            + addActionDieNormal()
            + addActionMoveNormal()
            + addAllActions()
            + addAllAttack()
            + addAllWeapon()
            + addIconSkills()
        }
      }
    }
  }
  

  com.example.semesterexam.monster.BossHuMan -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Orc -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Satan -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Skeleton -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Winged -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Wolf -up-|> com.example.semesterexam.core.Monster
  com.example.semesterexam.monster.Zombie -up-|> com.example.semesterexam.core.Monster


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
